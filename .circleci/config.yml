version: 2.1


            
jobs:
  build:
    docker:
      - image: cimg/go:1.16.6
    steps:
      - checkout
      - run:
          name: Build flexo
          command: |
            CGO_ENABLED=0 go build -a -ldflags "-s -w -extldflags '-static'" -o flexo
            echo done building
      # persist the built binary
      - persist_to_workspace:
          root: ./
          paths:
            - flexo

  lint:
    docker:
      - image: cimg/go:1.16.6
    steps:
      - run:
          name: Install and Run Go Linter
          command: |
            # add GOPATH to default path
            export PATH=$PATH:$(go env GOPATH)
            # binary will be $(go env GOPATH)/bin/golangci-lint
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.41.1
            # run the linter
            golangci-lint run

  test:
    docker:
      - image: cimg/go:1.16.6
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: ls -l
      - run: echo todo
              

            

workflows:
  default:
    jobs:
      - lint
      - build
      - test:
          requires: [build]
      # - deploy:
      #     requires: [test, scan]
      #     # TODO: remove me in prod (the next line)
      #     # requires: [build-backend]
      #     filters:
      #       branches:
      #         only: [main]
      # - configure-infrastructure:
      #     requires: [deploy-infrastructure]
      # - run-migrations:
      #     requires: [configure-infrastructure]
      #     # requires: [deploy-infrastructure]   # TODO: this is not the correct 'require'. use ^ instead
      # - deploy-frontend:
      #     requires: [run-migrations]
      #     # requires: [deploy-infrastructure]   # TODO: this is not the correct 'require'. use ^ instead
      # - deploy-backend:
      #     requires: [run-migrations]
      #     # requires: [deploy-infrastructure]   # TODO: this is not the correct 'require'. use ^ instead
      # - smoke-test:
      #     requires: [deploy-backend, deploy-frontend]
      # - cloudfront-update:
      #     requires: [smoke-test]
      # - cleanup:
      #     requires: [cloudfront-update]
